FORMAT: 1A
HOST: http://api.signifyd.com/v2

# Signifyd

Welcome to the Signifyd API. These docs will show you how to authenticate, make requests and view your data that the API will process and create.

The Signifyd API provides a REST interface for creating cases for your orders. Each request you make to the API must be an authenticated call using Basic Authentication. Currently all responses to and from the API will be in JSON.

[Learn more about JSON DataTypes.](http://www.tutorialspoint.com/json/json_data_types.htm)

You will be provided with an API token that you can use to make authenticated calls. Be responsible with your key, for it gives full access to your account and data we collect and process.

## Authentication
You authenticate to the Signifyd API by providing your API key in the request. 
You can find your API key in your account page.

Authentication to the API occurs via [HTTP Basic Auth](http://en.wikipedia.org/wiki/Basic_access_authentication#Client_side). 
Provide your API key as the basic auth username. You do not need to provide a password, but you do need to append a colon ":" on the end of your token.
Examples through this documentation are given as the API key is `abcdefghijklmnopqrstuvwxyz`.

Be sure all API calls to Signifyd are made over HTTPS. Otherwise they will fail.

## Status Codes
We'll respond with one of the following status codes.

| Code| Description |
| --- | --- |
|`200`| Success. Request completed. |
|`201`| Success. New resource created. |
|`204`| Success. No content to return. Only the status code returns. |
|`400`| Bad Request - The request could not be parsed. |
|`401`| Unauthorized - user is not logged in, could not be authenticated. |
|`403`| Forbidden - Cannot access resource. |
|`404`| Not Found - resource doesn't exist. |
|`500`| Server error. |

## Errors
Signifyd uses conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success, codes in the 4xx range indicate an error that resulted from the provided information (e.g. a required parameter was missing, a charge failed, etc.), and codes in the 5xx range indicate an error with Signifyd's servers.

Not all errors map cleanly onto HTTP response codes, however. When a request is valid but does not complete successfully, we return a 402 error code.

## Dates
The Signifyd API uses the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) date format for 
Complete date plus hours, minutes and seconds.

```
yyyy-MM-dd'T'HH:mm:ssZ
2015-06-03T13:21:58+00:00
```

# Cases API Root [/]

This resource does not have any attributes. Instead it offers the initial
API affordances in the form of the links in the JSON body.

## Group Cases

Resources related to cases in the API.

## Case creation [/cases]
To investigate a transaction, you create a case resource.

Technically, when creating a case all fields are optional, and you can create a case with as 
much or as little data as you have. However, we have labeled certain fields as required if we believe 
they are necessary to provide an accurate score.

Read the description of each field carefully. More data is better for scoring, but it is always better 
to leave a field blank rather than fill it in with data that does not quite fit the definition.

### Create a Case [POST]

+ Request (application/json)

    + Headers
    
            Authorization: Basic YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo6

    + Attributes (CaseCreation)    

    + Body

            {
                "purchase": {
                    "browserIpAddress": "192.168.1.1",
                    "orderId": "4fj58as",
                    "createdAt": "2013-01-18T17:54:31-05:00",
                    "paymentGateway": "stripe",
                    "currency": "USD",
                    "avsResponseCode": "Y",
                    "cvvResponseCode": "M",
                    "orderChannel": "PHONE",
                    "receivedBy": "John Doe",
                    "totalPrice": 74.99,
                    "products": [
                        {
                            "itemId": "1",
                            "itemName": "Sparkly sandals",
                            "itemUrl": "http://mydomain.com/sparkly-sandals",
                            "itemImage": "http://mydomain.com/images/sparkly-sandals.jpeg",
                            "itemQuantity": 1,
                            "itemPrice": 49.99,
                            "itemWeight": 5
                        },
                        {
                            "itemId": "2",
                            "itemName": "Summer tank top",
                            "itemUrl": "http://mydomain.com/summer-tank",
                            "itemImage": "http://mydomain.com/images/summer-tank.jpeg",
                            "itemQuantity": 1,
                            "itemPrice": 19.99,
                            "itemWeight": 2
                        }
                    ],
                    "shipments": [
                        {
                            "shipper": "UPS",
                            "shippingMethod": "ground",
                            "shippingPrice": 10,
                            "trackingNumber": "3A4U569H1572924642"
                        },
                        {
                            "shipper": "USPS",
                            "shippingMethod": "international",
                            "shippingPrice": 20,
                            "trackingNumber": "9201120200855113889012"
                        }
                    ]
                },
                "recipient": {
                    "fullName": "Bob Smith",
                    "confirmationEmail": "bob@gmail.com",
                    "confirmationPhone": "5047130000",
                    "organization": "Signifyd",
                    "deliveryAddress": {
                        "streetAddress": "123 State Street",
                        "unit": "2A",
                        "city": "Chicago",
                        "provinceCode": "IL",
                        "postalCode": "60622",
                        "countryCode": "US",
                        "latitude": 41.92,
                        "longitude": -87.65
                    }
                },
                "card": {
                    "cardHolderName": "Robert Smith",
                    "bin": 407441,
                    "last4": "1234",
                    "expiryMonth": 12,
                    "expiryYear": 2015,
                    "hash": "sdfvbkel456hj",
                    "billingAddress": {
                        "streetAddress": null,
                        "unit": "2A",
                        "city": "Chicago",
                        "provinceCode": "IL",
                        "postalCode": "60622",
                        "countryCode": "US",
                        "latitude": 41.92,
                        "longitude": -87.65
                    }
                },
                "userAccount": {
                    "email": "bob@gmail.com",
                    "username": "bobbo",
                    "phone": "5555551212",
                    "createdDate": "2013-01-18T17:54:31-05:00",
                    "accountNumber": "54321",
                    "lastOrderId": "4321",
                    "aggregateOrderCount": 40,
                    "aggregateOrderDollars": 5000,
                    "lastUpdateDate": "2013-01-18T17:54:31-05:00"
                },
                "seller": {
                    "name": "Amazon",
                    "domain": "amazon.com",
                    "shipFromAddress": {
                        "streetAddress": "1850 Mercer Rd",
                        "unit": null,
                        "city": "Lexington",
                        "provinceCode": "KY",
                        "postalCode": "40511",
                        "countryCode": "US",
                        "latitude": 38.07,
                        "longitude": -84.53
                    },
                    "corporateAddress": {
                        "streetAddress": "410 Terry Ave",
                        "unit": "3L",
                        "city": "Seattle",
                        "provinceCode": "WA",
                        "postalCode": "98109",
                        "countryCode": "US",
                        "latitude": 47.6,
                        "longitude": -122.33
                    }
                }
            }
    
+ Response 201 (application/json)

    + Body

            {"investigationId":1}


## Retrieve a Case [/case/{caseId}]

### Get a Case [GET]

+ Parameters
    + caseId: 44 (integer) - The id for the case that you want to retrieve.

+ Request

    + Headers
        
            Authorization: Basic YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo6

+ Response 200 (application/json)

    + Attributes (Case)
        
    
    + Body
    
            {
                guaranteeEligible: false,
                guaranteeDisposition: "APPROVED"
                status: "DISMISSED",
                caseId: 44,
                score: 776,
                adjustedScore: 776,
                investigationId: 44,
                uuid: "97c56c86-7984-44fa-9a3e-7d5f34d1bead",
                headline: "Maxine Trycia",
                orderId: "1234",
                orderDate: "2013-01-18T22:54:29+0000",
                orderAmount: 48,
                associatedTeam: "1",
                reviewDisposition: "GOOD",
                createdAt: "2013-03-06T23:17:17+0000",
                updatedAt: "2013-03-06T23:17:18+0000"
            }

+ Response 404 (application/json)

    + Body
    
            {
              messages: [
                  "There is no case with that id, or you do not have permission to access it."
              ]
            }
            
### Get case entries [GET /case/{caseId}/entries]

+ Parameters
    + caseId: 44 (integer) - The id for the case that you want to retrieve.

+ Response 200 (application/json)

    + Attributes (CaseEntries)
    
    + Body
    
            {
                "accounts": [
                    {
                        "uuid": "b78ab284-3d60-4400-a2bf-5822ca709e71",
                        "entityName": "robertsmith@example.com",
                        "role": "accountEmail",
                        "seeder": true,
                        "seederUuid": "80bff65c-fc7b-4b13-9874-6262cf63a5e1",
                        "details": {
                            "username": "robertsmith",
                            "emailAddress": "robertsmith@example.com",
                            "dateCreated": null,
                            "accountType": "email"
                        }
                    }
                ],
                "organizations": [
                    {
                        "details": {
                            "employeesExact": 40000
                        },
                        "entityName": "Comcast Cable",
                        "uuid": "fa728e50-9d44-40aa-adee-cc58c739a6b7",
                        "role": "asnCarrier",
                        "seeder": false,
                        "seederUuid": "4f5d1021-fbe4-44c9-8ac3-438a057c150b"
                    }
                ],
                "phones": [
                    {
                        "details": {
                            "phoneType": "MOBILE",
                            "phoneNumber": "+1 555-555-1212"
                        },
                        "entityName": "+1 555-555-1212",
                        "uuid": "cc3a52c3-3966-4624-b8f3-80bd6f1b4793",
                        "role": "confirmationPhone",
                        "seeder": true,
                        "seederUuid": "1173671e-cd26-4e3d-84bd-e6e710cf9414"
                    }
                ],
                "people": [
                    {
                        "details": {
                            "familyName": "Smith",
                            "givenName": "Robert",
                            "middleName": null,
                            "age": null
                        },
                        "entityName": "Robert Smith",
                        "uuid": "ec7b59a7-0043-423e-b015-a6c76a7d9b34",
                        "role": "cardHolder",
                        "seeder": true,
                        "seederUuid": "188e7b48-42e4-4c6b-a824-2d0d3d69e379"
                    }
                ],
                "networkLocations": [
                    {
                        "details": {
                            "anonymizerStatus": null,
                            "ipAddress": "127.0.0.1",
                            "asn": 7922,
                            "connectionType": null,
                            "ipRoutingType": null
                        },
                        "entityName": "127.0.0.1",
                        "uuid": "8aa4ef3c-f78d-49c2-9762-bb90765914d3",
                        "role": "purchaseIP",
                        "seeder": true,
                        "seederUuid": "4f5d1021-fbe4-44c9-8ac3-438a057c150b"
                    },
                    {
                        "details": {
                            "tld": "NET",
                            "firstSubdomain": "comcast",
                            "countryTld": null,
                            "genericTld": "NET"
                        },
                        "entityName": "comcast.net",
                        "uuid": "4cc40dc1-8fcc-4835-8697-85b02de6ea50",
                        "role": "ipDomain",
                        "seeder": false,
                        "seederUuid": "80bff65c-fc7b-4b13-9874-6262cf63a5e1"
                    }
                ],
                "physicalLocations": [
                    {
                        "details": {
                            "cityName": "Fremont",
                            "regionName": "Fremont",
                            "regionAlpha": null,
                            "countryShortName": "United States",
                            "countryFullName": "United States of America",
                            "countryIsoCode": "US",
                            "continentName": "North America",
                            "continentCode": "NA",
                            "latitude": 37.5155,
                            "longitude": -121.8962
                        },
                        "entityName": "Fremont, US",
                        "uuid": "209008a8-8c22-46ab-96e1-f8401bfff7de",
                        "role": "ipGeo",
                        "seeder": false,
                        "seederUuid": "4f5d1021-fbe4-44c9-8ac3-438a057c150b"
                    }
                ]
            }  


## Group Webhooks

Webhooks are messages sent by Signifyd via HTTP POST to a url you configure on your settings page in the Notifications section. 
Webhook messages are sent when certain events occur in the life of an investigation. They allow your application to 
receive "pushed" updates about a case, rather than poll Signifyd for status changes.

### Supported Events
You can create webhooks in Signifyd for the following events.  Each event has a corresponding topic identifier
which will be sent in the `X-SIGNIFYD-TOPIC` header of the webhook.

Currently the Case Creation, Case Rescore, Case Review and Guarantee Completion events can trigger a webhook.

| Event| `X-SIGNIFYD-TOPIC` | Description |
| --- | --- | --- |
| Case Creation | `cases/creation` | Sent immediately after a case is created |
| Case Rescore | `cases/creation` | Sent anytime a case is scored following case creation |
| Case Review | `cases/creation` | Sent anytime a user assigns a case a Review Disposition (thumbs up/down on console) |
| Guarantee Completion | `guarantees/completion` | Sent anytime a guarantees decision is made on a case |


### Verification

To allow a client to verify a webhook message has in fact come from Signifyd, an `X-SIGNIFYD-SEC-HMAC-SHA256` header is included in each webhook POST message. The contents of this header is the Base64 encoded output of the HMAC SHA256 encoding of the JSON body of the message, using the team's API key as the encryption key. To verify the authenticity of the webhook message, you should calculate this value yourself and verify it equals the value contained in the header.

See this example code snippet for an idea of how to compute the value in Java.

### Testing a Webhook
Once a webhook is configured, a test POST can be sent by selecting the Test button next to the desired webhook. 
The test webhook message is sent with an HMAC SHA256 verification header (see Webhook Verification below). 
The header value is the Base64 encoded output of the HMAC SHA256 encoding of the test webhook JSON body, 
using the team API key when available. When a team API key is not available, the default secret key ABCDE 
is used. A 'cases/test' topic header is also sent with the test POST.

# Data Structures

## Case (object)
+ guaranteeEligible: false(boolean, required) - boolean value indicating if a guarantee can be requested for this Case.  If a guarantee has already been requested for this case, then this value will be 'false'.
+ guaranteeDisposition: APPROVED (GuaranteeDisposition, optional) - If a case has been submitted for guarantee, this field will be present and indicate
+ status: DISMISSED (CaseStatus, required) - The current status of the case. OPEN, PROCESSING AND HELD are considered active cases. FLAGGED and DISMISSED are considered resolved cases.
+ caseId: 44 (number, required) - The unique identifier assigned to the case when it is created.
+ score: 776 (number, required) - A value from 0-1000 indicating the likelihood that the order/transaction is fraud. 0 indicates the highest risk, 1000 inidicates the highest risk.
+ investigationId: 44 (number, optional) - DEPRECATED.  See caseId.
+ uuid: `97c56c86-7984-44fa-9a3e-7d5f34d1bead` (string, required) - A universally unique id assigned to the case.
+ headline: Maxine Trycia (string, required) - The headline (aka name) assigned to the case.
+ orderId: 1234 (string, required) - The unique identifier for the order that was provided when the case was created.
+ orderDate: `2013-01-18T22:54:29+0000` (string, optional) - The date and time when the order was placed.
+ orderAmount: 48 (number, required) - The total price of the order, including shipping price and taxes.
+ associatedTeam: 1 (number, required) - The id for the team with which this case is associated.
+ reviewDisposition: GOOD (ReviewDisposition, required) - The review disposition signifies the agent's opinion after reviewing the case, the value will be FRAUDULENT or GOOD based on the agent's review. If there is no review by the agent the value will be UNSET or NULL.
+ createdAt: `2013-03-06T23:17:17+0000` (string, required) - The date and time when the case was created.
+ updatedAt: `2013-03-06T23:17:18+0000` (string, required) - The date and time when the case was last updated.

## GuaranteeDisposition (enum)
    
    + Members
        + APPROVED
        + DECLINED
        + PENDING
        + CANCELED
        + IN_REVIEW
    
## CaseStatus (enum)

    + Members
        + OPEN
        + PROCESSING
        + FLAGGED
        + DISMISSED
        + HELD
    
## ReviewDisposition (enum)

    + Members
        + GOOD
        + FRAUDULENT
        + UNSET
        
## CaseEntries (object)

 + accounts (array[CaseEntry], required) - all accounts (such as email and social media accounts) associated with this case
 + organizations (array[CaseEntry], required) - all organizations (such as employers and phone carriers) associated with this case
 + phones (array[CaseEntry], required) - all phone numbers associated with this case
 + people (array[CaseEntry], required) - all people assoicated with this case
 + networkLocations (array[CaseEntry], required) - all network locations associated with this case (such as the IP Address used during the purchase)
 + physicalLocations (array[CaseEntry], required) - all physical locations (such as the billing address) associated with this case
        
## CaseEntry (object)

+ uuid (string) - A universally unique id for the entry.
+ entityName (string) - A name for the entity generated by Signifyd from the case data.
+ role (string) - The entry's role in the case.
+ seeder (boolean) - True if this data was provided at case creation. False if this data was obtained by Signifyd from an external datasource.
+ seederUuid (string) - The universally unique id for the original piece of data that allowed us to create this entry. For example, if we have an Ip Address and an Ip Geo-location, they will both have the same seederUuid because they were both sourced from the original ip string.
+ details (object) - Additional data about the entity. Varied by the entity type.    

## CaseCreation (object)

+ purchase.browserIpAddress (string, required) - The IP Address of the browser that was used to make the purchase. This is the IP Address that was used to connect to your site and make the purchase.
+ purchase.shipments (array[Shipment][]) - The shipments association with this purchase
+ purchase.products (array[Product][]) - The products purchased in the transaction.
+ purchase.orderId (string, required) - A string uniquely identifying this order.
+ purchase.createdAt (string, required) - yyyy-MM-dd'T'HH:mm:ssZ(More about date formats) The date and time when the order was placed.
+ purchase.paymentGateway (string) - The gateway that processed the transaction.
+ purchase.currency (string) - The currency of the order.
+ purchase.avsResponseCode (string, required) - The response code from the address verification system (AVS)
+ purchase.cvvResponseCode (string, required) - The response code from the card verification value check
+ purchase.orderChannel (OrderChannel) - The method used by the buyer to place the order.
+ purchase.receivedBy (string) - If the order was was taken by a customer service or sales agent, his or her name.
+ purchase.totalPrice (number, required) - The total price of the order, including shipping price and taxes.

+ recipient.fullName (string, required) - The full name of the person receiving the goods. If this item is being shipped, then this field is the person it is being shipping to. Don't assume this name is the same as card.cardHolderName. Only put a value here if the name will actually appear on the shipping label. If this item is digital, then this field will likely be blank.
+ recipient.confirmationEmail (string, required) - When this purchase was completed, you likely sent a confirmation email or you will be sending a confirmation email to someone once you approve the order. This is the email address to which that confirmation email will be sent.
+ recipient.confirmationPhone (string) - The phone number that you would call if there was something wrong with this order or the phone number that was supplied with the shipping information.
+ recipient.organization (string) - If provided by the buyer, the name of the recipient's company or organization.
+ recipient.deliveryAddress (Address, required) - The address to which the order will be delivered.

+ card.cardHolderName (string, required) - The full name on the credit card that was charged.
+ card.bin (number) - The first six digits of the credit card, the bank identification number, which uniquely identifies the issuer.
+ card.last4 (string) - The last four digits of the card number.
+ card.expiryMonth (number) - MM representation of the expiration month of the card.
+ card.expiryYear (number) - yyyy representation of the expiration year of the card.
+ card.hash (string) - A string uniquely identifying this card (do not send the card number itself).
+ card.billingAddress (Address, required) - The billing address for the card.

+ userAccount.emailAddress (string) - The primary email address associated with the account.
+ userAccount.username (string) - The username associated with the account. Please supply this even if it is the same as the email address.
+ userAccount.phone (string) - The phone number association with the account.
+ userAccount.createdDate (string) - yyyy-MM-dd'T'HH:mm:ssZ(More about date formats) The date when the account was created.
+ userAccount.accountNumber (string) - Your unique identifier for the account.
+ userAccount.lastOrderId (string) - The unique identifier for the last order placed by this account, prior to the current order.
+ userAccount.aggregateOrderCount (number) - The total count of orders placed by this account since it was created, including the current order.
+ userAccount.aggregateOrderDollars (number) - The total amount spent by this account since it was created, including the current order.
+ userAccount.lastUpdateDate (string) - yyyy-MM-dd'T'HH:mm:ssZ(More about date formats) The last time a change was made to this account other than an order being placed. Examples include changing email addresses or adding a new credit card.

+ seller.name (string) - The business name of the seller.
+ seller.domain (string) - The domain of the seller.
+ seller.shipFromAddress (Address) - The location from which the seller shipped the order.

## Purchase (object)

+ browserIpAddress (string) - The IP Address of the browser that was used to make the purchase. This is the IP Address that was used to connect to your site and make the purchase. Do not worry if you think is a proxy address -- Signifyd will figure that out.
+ shipments ([Shipment][]) - The shipments association with this purchase
+ products ([Product][]) - The products purchased in the transaction.
+ orderId (string) - A string uniquely identifying this order.
+ createdAt (string) - yyyy-MM-dd'T'HH:mm:ssZ(More about date formats) The date and time when the order was placed.
+ paymentGateway (string) - The gateway that processed the transaction.
+ currency (string) - The currency of the order.
+ avsResponseCode (string) - The response code from the address verification system (AVS)
+ cvvResponseCode (string) - The response code from the card verification value check
+ orderChannel (OrderChannel) - The method used by the buyer to place the order.
+ receivedBy (string) - If the order was was taken by a customer service or sales agent, his or her name.
+ totalPrice (number) - The total price of the order, including shipping price and taxes.

## OrderChannel (enum)
    + Members
        + WEB
        + PHONE

## Recipient (object)
All items related to person or organization receiving the items purchased.

+ fullName (string) - The full name of the person receiving the goods. If this item is being shipped, then this field is the person it is being shipping to. Don't assume this name is the same as card.cardHolderName. Only put a value here if the name will actually appear on the shipping label. If this item is digital, then this field will likely be blank.
+ confirmationEmail (string) - When this purchase was completed, you likely sent a confirmation email or you will be sending a confirmation email to someone once you approve the order. This is the email address to which that confirmation email will be sent.
+ confirmationPhone (string) - The phone number that you would call if there was something wrong with this order or the phone number that was supplied with the shipping information.
+ organization (string) - If provided by the buyer, the name of the recipient's company or organization.
+ deliveryAddress (Address) - The address to which the order will be delivered.

## Shipment (object)
    
+ shippingPrice (number) - The amount charged to the customer for shipping the product
+ shipper (string) -The name of the shipper
+ shippingMethod (string) - The type of the shipment method used
+ trackingNumber (string) The tracking number for the shipment.


## Card (object)
+ cardHolderName (string) - The full name on the credit card that was charged.
+ bin (number) - The first six digits of the credit card, the bank identification number, which uniquely identifies the issuer.
+ last4 (string) - The last four digits of the card number.
+ expiryMonth (number) - MM representation of the expiration month of the card.
+ expiryYear (number) - yyyy representation of the expiration year of the card.
+ hash (string) - A string uniquely identifying this card (do not send the card number itself).
+ billingAddress (Address) - The billing address for the card.

## UserAccount (object)
Commonly, a customer must create an account before placing an order. These data values are details from 
that account. You should only fill these values in if the customer has an account into which they can login. 
Leave them blank if this was a one-time transaction with no account.

+ emailAddress (string) - The primary email address associated with the account.
+ username (string) - The username associated with the account. Please supply this even if it is the same as the email address.
+ phone (string) - The phone number association with the account.
+ createdDate (string) - yyyy-MM-dd'T'HH:mm:ssZ(More about date formats) The date when the account was created.
+ accountNumber (string) - Your unique identifier for the account.
+ lastOrderId (string) - The unique identifier for the last order placed by this account, prior to the current order.
+ aggregateOrderCount (number) - The total count of orders placed by this account since it was created, including the current order.
+ aggregateOrderDollars (number) - The total amount spent by this account since it was created, including the current order.
+ lastUpdateDate (string) - yyyy-MM-dd'T'HH:mm:ssZ(More about date formats) The last time a change was made to this account other than an order being placed. Examples include changing email addresses or adding a new credit card.

## Seller (object)
All data related to the merchant that sold the product. If this information is not supplied, 
we will assume you are the seller.

+ name (string) - The business name of the seller.
+ domain (string) - The domain of the seller.
+ shipFromAddress (Address) - The location from which the seller shipped the order.

## Address (object)
+ streetAddress (string) - The street number and street name.
+ unit (string) - The unit or apartment number.
+ city (string) - The city name.
+ provinceCode (string) - The code or abbreviation for the province.
+ postalCode string - The postal code.
+ countryCode (string) - The two-letter ISO-3166 country code. If left blank, we will assume US.
+ latitude (number) - The latitude of the address.
+ longitude (number) - The longitude of the address.

## Product (object)
+ itemId (string) - Your unique identifier for the product. This is a string because of hexadecimal identifiers.
+ itemName (string) - The name of the product.
+ itemUrl (string) - The url to the product's page.
+ itemImage (string) - The url to an image of the product.
+ itemQuantity (number) - The number of the items purchased.
+ itemPrice (number) - The price paid for each item (not the aggregate).
+ itemWeight (number) - The weight of each item in grams.




